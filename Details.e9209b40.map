{"version":3,"sources":["Carousel.js","Details.js"],"names":["Carousel","state","photos","active","handleIndexClick","setState","event","target","dataset","index","hero","value","map","photo","media","filter","React","Component","petfinder","key","secret","ModalLoader","loader","loading","Details","showModal","toggleModal","pet","get","output","id","props","then","breed","Array","isArray","data","breeds","join","name","animal","location","contact","city","description","catch"],"mappings":"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","file":"Details.e9209b40.map","sourceRoot":"../src","sourcesContent":["import React from \"react\";\n\nclass Carousel extends React.Component {\n  state = {\n    photos: [],\n    active: 0\n  };\n  static getDerivedStateFromProps({ media }) {\n    let photos = [];\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    return { photos };\n  }\n  handleIndexClick = event => {\n    this.setState({\n      active: +event.target.dataset.index\n    });\n  };\n  render() {\n    const { photos, active } = this.state;\n\n    let hero = \"http://placecorgi.com/300/300\";\n    if (photos[active] && photos[active].value) {\n      hero = photos[active].value;\n    }\n\n    return (\n      <div className=\"carousel\">\n        <img src={hero} alt=\"animal\" />\n        <div className=\"carousel-smaller\">\n          {photos.map((photo, index) => (\n            /* eslint-disable-next-line */\n            <img\n              onClick={this.handleIndexClick}\n              data-index={index}\n              key={photo.value}\n              src={photo.value}\n              className={index === active ? \"active\" : \"\"}\n              alt=\"animal thumnbail\"\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\nimport pf from \"petfinder-client\";\nimport { navigate } from \"@reach/router\";\nimport Carousel from \"./Carousel\";\nimport Loadable from \"react-loadable\";\n/** below statement is commented to implement code splitting */\n// import Modal from \"./Modal\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nconst ModalLoader = Loadable({\n  loader: () => import(\"./Modal\"),\n  loading() {\n    return <div>Loading split code.</div>;\n  }\n});\n\nclass Details extends React.Component {\n  state = {\n    loading: true,\n    showModal: false\n  };\n  toggleModal = () => {\n    this.setState({\n      showModal: !this.state.showModal\n    });\n  };\n  componentDidMount() {\n    petfinder.pet\n      .get({\n        output: \"full\",\n        id: this.props.id\n      })\n      .then(data => {\n        let breed;\n        if (Array.isArray(data.petfinder.pet.breeds.breed)) {\n          breed = data.petfinder.pet.breeds.breed.join(\", \");\n        } else {\n          breed = data.petfinder.pet.breeds.breed;\n        }\n        this.setState({\n          name: data.petfinder.pet.name,\n          animal: data.petfinder.pet.animal,\n          location: `${data.petfinder.pet.contact.city}, ${\n            data.petfinder.pet.contact.state\n          }`,\n          description: data.petfinder.pet.description,\n          media: data.petfinder.pet.media,\n          breed,\n          loading: false\n        });\n      })\n      .catch(() => {\n        navigate(\"/\");\n      });\n  }\n  render() {\n    if (this.state.loading) {\n      return <h1>loading … </h1>;\n    }\n\n    const {\n      media,\n      animal,\n      breed,\n      location,\n      description,\n      name,\n      showModal\n    } = this.state;\n\n    return (\n      <div className=\"details\">\n        <Carousel media={media} />\n        <div>\n          <h1>{name}</h1>\n          <h2>{`${animal} — ${breed} — ${location}`}</h2>\n          <button onClick={this.toggleModal}>Adopt {name}</button>\n          <p>{description}</p>\n          {showModal ? (\n            <ModalLoader>\n              <h1>Would you like to adopt {name}</h1>\n              <div className=\"buttons\">\n                <button onClick={this.toggleModal}>Yes</button>\n                <button onClick={this.toggleModal}>Hell Yes!!</button>\n              </div>\n            </ModalLoader>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n"]}