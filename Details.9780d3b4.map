{"version":3,"sources":["Carousel.js","Details.js"],"names":["Carousel","state","handleIndexClick","setState","event","target","dataset","index","React","Component","photos","active","hero","value","map","photo","media","filter","Details","petfinder","secret","ModalLoader","toggleModal","showModal","pet","get","props","id","then","breed","data","Array","isArray","breeds","join","name","animal","contact","city","description","catch","loading","location"],"mappings":";AAiDeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAjDf,EAAA,QAAA,SAiDeA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,kEAAAA,GAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,IAAAA,OAAAA,eAAAA,OAAAA,eAAAA,EAAAA,GAAAA,EAAAA,UAAAA,GA/CTA,IAAAA,EAAAA,SAAAA,GA+CSA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA9CbC,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACE,OAAA,GACA,OAAA,GAUVC,EAAAA,iBAAmB,SAAS,GACrBC,EAAAA,SAAS,CACJ,QAACC,EAAMC,OAAOC,QAAQC,SAEjC,EAAA,EAAA,GA8BYP,OAAAA,EAAAA,EA/CQQ,EAAMC,QAAAA,WA+CdT,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SA7BJ,MAAA,WAAA,IAAA,EAAA,KACoB,EAAA,KAAKC,MAAxBS,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,OAEZC,EAAO,gCAMT,OALEF,EAAOC,IAAWD,EAAOC,GAAQE,QAC5BH,EAAAA,EAAOC,GAAQE,OAItB,EAAA,QAAA,cAAA,MAAK,CAAA,UAAU,YACR,EAAA,QAAA,cAAA,MAAA,CAAA,IAAKD,EAAM,IAAI,WACpB,EAAA,QAAA,cAAA,MAAK,CAAA,UAAU,oBACLE,EAAAA,IAAI,SAACC,EAAOR,GAAR,OAEV,EAAA,QAAA,cAAA,MAAA,CACW,QAAA,EAAKL,iBACFK,aAAAA,EACPQ,IAAAA,EAAMF,MACNE,IAAAA,EAAMF,MACAN,UAAAA,IAAUI,EAAS,SAAW,GACrC,IAAA,4BASHX,CAAAA,CAAAA,IAAAA,2BA1C8B,MAAA,SAAA,GAATgB,IAAAA,EAAAA,EAAAA,MAC5BN,EAAS,GAKN,OAJHM,GAASA,EAAMN,QAAUM,EAAMN,OAAOK,QAC/BC,EAAAA,EAAMN,OAAOK,MAAME,OAAO,SAAA,GAASF,MAAmB,OAAnBA,EAAM,YAG7C,CAAEL,OAAF,OAoCIV,EA/CTA,GA+CSA,QAAAA,QAAAA;;ACgDAkB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAjGf,EAAA,QAAA,SAiGeA,EAAAA,EAAAA,GAhGf,EAAA,QAAA,oBAgGeA,EAAAA,EAAAA,GA/Ff,EAAA,QAAA,iBACA,EAAA,QAAA,cA8FeA,EAAAA,EAAAA,GA7Ff,EAAA,QAAA,kBA6FeA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,kEAAAA,GAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,IAAAA,OAAAA,eAAAA,OAAAA,eAAAA,EAAAA,GAAAA,EAAAA,UAAAA,GAzFf,IAAMC,GAAY,EAAG,EAAA,SAAA,CAAA,IAAA,mCAEnBC,OAAAA,qCAGIC,GAAc,EAAS,EAAA,SAAA,CACnB,OAAA,WAAM,OAAA,QAAO,iBAAP,CAAO,QAAA,QAAA,aADM,QAEjB,WACD,OAAA,EAAA,QAAA,cAAA,MAAA,KAAA,0BAILH,EAAAA,SAAAA,GA6ESA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA5EbjB,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,MAAQ,CACG,SAAA,EACE,WAAA,GAEbqB,EAAAA,YAAc,WACPnB,EAAAA,SAAS,CACD,WAAC,EAAKF,MAAMsB,aAE1B,EAAA,EAAA,GAoEYL,OAAAA,EAAAA,EA7EOV,EAAMC,QAAAA,WA6EbS,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAnEO,MAAA,WAAA,IAAA,EAAA,KACRM,EAAAA,IACPC,IAAI,CACK,OAAA,OACJ,GAAA,KAAKC,MAAMC,KAEhBC,KAAK,SAAQ,GACRC,IAAAA,OAAJ,EAEUC,EADNC,MAAMC,QAAQF,EAAKX,UAAUK,IAAIS,OAAOJ,OAClCC,EAAKX,UAAUK,IAAIS,OAAOJ,MAAMK,KAAK,MAErCJ,EAAKX,UAAUK,IAAIS,OAAOJ,MAE/B1B,EAAAA,SAAS,CACN2B,KAAAA,EAAKX,UAAUK,IAAIW,KACjBL,OAAAA,EAAKX,UAAUK,IAAIY,OACdN,SAAAA,EAAKX,UAAUK,IAAIa,QAAQC,KACtCR,KAAAA,EAAKX,UAAUK,IAAIa,QAAQpC,MAEhB6B,YAAAA,EAAKX,UAAUK,IAAIe,YACzBT,MAAAA,EAAKX,UAAUK,IAAIR,MAPd,MAAA,EASH,SAAA,MAGZwB,MAAM,YACI,EAAA,EAAA,UAAA,SAyCFtB,CAAAA,IAAAA,SAtCJ,MAAA,WACH,GAAA,KAAKjB,MAAMwC,QACN,OAAA,EAAA,QAAA,cAAA,KAAA,KAAA,cAWL,IAAA,EAAA,KAAKxC,MAPPe,EAAAA,EAAAA,MACAoB,EAAAA,EAAAA,OACAP,EAAAA,EAAAA,MACAa,EAAAA,EAAAA,SACAH,EAAAA,EAAAA,YACAJ,EAAAA,EAAAA,KACAZ,EAAAA,EAAAA,UAIA,OAAA,EAAA,QAAA,cAAA,MAAK,CAAA,UAAU,WACZ,EAAA,QAAA,cAAA,EAAD,QAAU,CAAA,MAAOP,IACjB,EAAA,QAAA,cAAA,MAAA,KACE,EAAA,QAAA,cAAA,KAAA,KAAKmB,GACL,EAAA,QAAA,cAAA,KAAA,KAAA,EAAoBN,MAAAA,EAAWa,MAAAA,GAC/B,EAAA,QAAA,cAAA,SAAQ,CAAA,QAAS,KAAKpB,aAAtB,SAA0Ca,GAC1C,EAAA,QAAA,cAAA,IAAA,KAAII,GAEF,EAAA,EAAA,QAAA,cAAA,EAAA,KACE,EAAA,QAAA,cAAA,KAAA,KAAA,2BAA6BJ,GAC7B,EAAA,QAAA,cAAA,MAAK,CAAA,UAAU,WACb,EAAA,QAAA,cAAA,SAAQ,CAAA,QAAS,KAAKb,aAAtB,OACA,EAAA,QAAA,cAAA,SAAQ,CAAA,QAAS,KAAKA,aAAtB,gBAGF,WAOCJ,EA7ETA,GA6ESA,QAAAA,QAAAA","file":"Details.9780d3b4.map","sourceRoot":"../src","sourcesContent":["import React from \"react\";\n\nclass Carousel extends React.Component {\n  state = {\n    photos: [],\n    active: 0\n  };\n  static getDerivedStateFromProps({ media }) {\n    let photos = [];\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    return { photos };\n  }\n  handleIndexClick = event => {\n    this.setState({\n      active: +event.target.dataset.index\n    });\n  };\n  render() {\n    const { photos, active } = this.state;\n\n    let hero = \"http://placecorgi.com/300/300\";\n    if (photos[active] && photos[active].value) {\n      hero = photos[active].value;\n    }\n\n    return (\n      <div className=\"carousel\">\n        <img src={hero} alt=\"animal\" />\n        <div className=\"carousel-smaller\">\n          {photos.map((photo, index) => (\n            /* eslint-disable-next-line */\n            <img\n              onClick={this.handleIndexClick}\n              data-index={index}\n              key={photo.value}\n              src={photo.value}\n              className={index === active ? \"active\" : \"\"}\n              alt=\"animal thumnbail\"\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\nimport pf from \"petfinder-client\";\nimport { navigate } from \"@reach/router\";\nimport Carousel from \"./Carousel\";\nimport Loadable from \"react-loadable\";\n/** below statement is commented to implement code splitting */\n// import Modal from \"./Modal\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nconst ModalLoader = Loadable({\n  loader: () => import(\"./Modal\"),\n  loading() {\n    return <div>Loading split code.</div>;\n  }\n});\n\nclass Details extends React.Component {\n  state = {\n    loading: true,\n    showModal: false\n  };\n  toggleModal = () => {\n    this.setState({\n      showModal: !this.state.showModal\n    });\n  };\n  componentDidMount() {\n    petfinder.pet\n      .get({\n        output: \"full\",\n        id: this.props.id\n      })\n      .then(data => {\n        let breed;\n        if (Array.isArray(data.petfinder.pet.breeds.breed)) {\n          breed = data.petfinder.pet.breeds.breed.join(\", \");\n        } else {\n          breed = data.petfinder.pet.breeds.breed;\n        }\n        this.setState({\n          name: data.petfinder.pet.name,\n          animal: data.petfinder.pet.animal,\n          location: `${data.petfinder.pet.contact.city}, ${\n            data.petfinder.pet.contact.state\n          }`,\n          description: data.petfinder.pet.description,\n          media: data.petfinder.pet.media,\n          breed,\n          loading: false\n        });\n      })\n      .catch(() => {\n        navigate(\"/\");\n      });\n  }\n  render() {\n    if (this.state.loading) {\n      return <h1>loading … </h1>;\n    }\n\n    const {\n      media,\n      animal,\n      breed,\n      location,\n      description,\n      name,\n      showModal\n    } = this.state;\n\n    return (\n      <div className=\"details\">\n        <Carousel media={media} />\n        <div>\n          <h1>{name}</h1>\n          <h2>{`${animal} — ${breed} — ${location}`}</h2>\n          <button onClick={this.toggleModal}>Adopt {name}</button>\n          <p>{description}</p>\n          {showModal ? (\n            <ModalLoader>\n              <h1>Would you like to adopt {name}</h1>\n              <div className=\"buttons\">\n                <button onClick={this.toggleModal}>Yes</button>\n                <button onClick={this.toggleModal}>Hell Yes!!</button>\n              </div>\n            </ModalLoader>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n"]}