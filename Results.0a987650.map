{"version":3,"sources":["Pet.js","SearchResults.js","Results.js"],"names":["Pet","React","Component","console","log","props","name","animal","breed","media","location","id","photos","photo","filter","hero","value","SearchResults","pets","map","pet","Array","isArray","breeds","join","contact","city","state","stateToProps","Results","prevProps","prevState"],"mappings":";AA0CeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA1Cf,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,iBAyCeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,mBAAAA,QAAAA,iBAAAA,OAAAA,SAAAA,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAA,mBAAAA,QAAAA,EAAAA,cAAAA,QAAAA,IAAAA,OAAAA,UAAAA,gBAAAA,IAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,WAAAA,EAAAA,IAAAA,mBAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,GAAAA,QAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,EAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,eAAAA,OAAAA,eAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,OAAAA,eAAAA,KAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,sDAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,gBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAAAA,GAvCTA,IAAAA,EAuCSA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,KAAAA,GAAAA,EAAAA,KAAAA,EAAAA,GAAAA,MAAAA,KAAAA,YAAAA,OAAAA,EAAAA,EAvCGC,EAAMC,QAAAA,WAuCTF,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAtCO,MAAA,WAClBG,QAAQC,IAAI,6BAqCDJ,CAAAA,IAAAA,uBAnCU,MAAA,WACrBG,QAAQC,IAAI,wBAkCDJ,CAAAA,IAAAA,qBAhCQ,MAAA,WACnBG,QAAQC,IAAI,oCA+BDJ,CAAAA,IAAAA,SA1BJ,MAAA,WAC8C,IAAA,EAAA,KAAKK,MAAlDC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,GAC1CC,EAAS,GACTH,GAASA,EAAMG,QAAUH,EAAMG,OAAOC,QACxCD,EAASH,EAAMG,OAAOC,MAAMC,OAAO,SAAAD,GAASA,MAAmB,OAAnBA,EAAM,YAGhDE,IAAAA,EAAO,gCAMT,OALEH,EAAO,IAAMA,EAAO,GAAGI,QACzBD,EAAOH,EAAO,GAAGI,OAIjB,EAAC,QAAA,cAAA,EAAD,KAAA,CAAM,GAAgBL,YAAAA,OAAAA,GAAM,UAAU,OACpC,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,mBACb,EAAA,QAAA,cAAA,MAAA,CAAK,IAAKI,EAAM,IAAKT,KAEvB,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,QACb,EAAKA,QAAAA,cAAAA,KAAAA,KAAAA,GACL,EAAQC,QAAAA,cAAAA,KAAAA,KAAAA,GAAAA,OAAAA,EAAYC,OAAAA,OAAAA,EAAWE,OAAAA,OAAAA,UAO1BV,EAAAA,GAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACJA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAtCf,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,UAoCe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAlCTiB,IAAAA,EAkCS,SAAA,GAjCDZ,SAAAA,EAAAA,GACJA,OADW,EAAA,KAAA,GACXA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,IAgCK,OAAA,EAAA,EAlCaJ,EAAMC,QAAAA,WAkCnB,EAAA,EAAA,CAAA,CAAA,IAAA,SA9BJ,MAAA,WAEL,OAAA,EACG,QAAA,cAAA,MAAA,KAAA,KAAKG,MAAMa,KAAKC,IAAI,SAAAC,GACfZ,IAAAA,EAOF,OALAA,EADEa,MAAMC,QAAQF,EAAIG,OAAOf,OACnBY,EAAIG,OAAOf,MAAMgB,KAAK,MAEtBJ,EAAIG,OAAOf,MAGnB,EAAC,QAAA,cAAA,EAAD,QAAA,CACE,OAAQY,EAAIb,OACZ,IAAKa,EAAIT,GACT,KAAMS,EAAId,KACV,MAAOE,EACP,MAAOY,EAAIX,MACX,SAAaW,GAAAA,OAAAA,EAAIK,QAAQC,KAASN,MAAAA,OAAAA,EAAIK,QAAQE,OAC9C,GAAIP,EAAIT,YAYP,EAAA,GAHTiB,EAAe,SAAA,GAAe,MAAA,CAClCV,KADsBA,EAAAA,OAGT,GAAA,EAAQU,EAAAA,SAAAA,EAAR,CAAsBX,GAAtB,QAAA,QAAA;;ACRAY,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA9Bf,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,oBA4BeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,mBAAAA,QAAAA,iBAAAA,OAAAA,SAAAA,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAA,mBAAAA,QAAAA,EAAAA,cAAAA,QAAAA,IAAAA,OAAAA,UAAAA,gBAAAA,IAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,WAAAA,EAAAA,IAAAA,mBAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,GAAAA,QAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,EAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,eAAAA,OAAAA,eAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,OAAAA,eAAAA,KAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,sDAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,gBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAAAA,GA1BTA,IAAAA,EA0BSA,SAAAA,GAzBDxB,SAAAA,EAAAA,GACJA,OADW,EAAA,KAAA,GACXA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,IAwBKwB,OAAAA,EAAAA,EA1BO5B,EAAMC,QAAAA,WA0Bb2B,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAtBO,MAAA,WAClB1B,QAAQC,IAAI,+BAqBDyB,CAAAA,IAAAA,qBAlBMC,MAAAA,SAAAA,EAAWC,GAC5B5B,QAAQC,IAAI,mCACZD,QAAQC,IAAI0B,GACZ3B,QAAQC,IAAI2B,GACZ5B,QAAQC,IAAI,kCACZD,QAAQC,IAAI,KAAKC,OACjBF,QAAQC,IAAI,KAAKuB,SAYNE,CAAAA,IAAAA,SAVJ,MAAA,WAEL,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,UACb,EAAC,QAAA,cAAA,EAAD,QADF,MAEE,EAAC,QAAA,cAAA,EAAD,QAFF,WAQSA,EAAAA,GAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"Results.0a987650.map","sourceRoot":"../src","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nclass Pet extends React.Component {\n  componentDidMount() {\n    console.log(\"pet compdidmount called\");\n  }\n  componentWillUnmount() {\n    console.log(\"pet comp unmounted\");\n  }\n  componentDidUpdate() {\n    console.log(\"pet component update is called\");\n  }\n  //   shouldComponentUpdate(prevProps) {\n  //     return this.props.id !== prevProps.id;\n  //   }\n  render() {\n    const { name, animal, breed, media, location, id } = this.props;\n    let photos = [];\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\n    }\n\n    let hero = \"http://placecorgi.com/300/300\";\n    if (photos[0] && photos[0].value) {\n      hero = photos[0].value;\n    }\n\n    return (\n      <Link to={`/details/${id}`} className=\"pet\">\n        <div className=\"image-container\">\n          <img src={hero} alt={name} />\n        </div>\n        <div className=\"info\">\n          <h1>{name}</h1>\n          <h2>{`${animal} — ${breed} — ${location}`}</h2>\n        </div>\n      </Link>\n    );\n  }\n}\n\nexport default Pet;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Pet from \"./Pet\";\n\nclass SearchResults extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        {this.props.pets.map(pet => {\n          let breed;\n          if (Array.isArray(pet.breeds.breed)) {\n            breed = pet.breeds.breed.join(\", \");\n          } else {\n            breed = pet.breeds.breed;\n          }\n          return (\n            <Pet\n              animal={pet.animal}\n              key={pet.id}\n              name={pet.name}\n              breed={breed}\n              media={pet.media}\n              location={`${pet.contact.city}, ${pet.contact.state}`}\n              id={pet.id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst stateToProps = ({ pets }) => ({\n  pets\n});\nexport default connect(stateToProps)(SearchResults);\n","import React from \"react\";\nimport SearchBox from \"./SearchBox\";\nimport SearchResults from \"./SearchResults\";\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    console.log(\"results component mounted\");\n    // this.search();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"results comp update before data\");\n    console.log(prevProps);\n    console.log(prevState);\n    console.log(\"results comp update after data\");\n    console.log(this.props);\n    console.log(this.state);\n  }\n  render() {\n    return (\n      <div className=\"search\">\n        <SearchBox />\n        <SearchResults />\n      </div>\n    );\n  }\n}\n\nexport default Results;\n"]}